def pick_and_place_prueba():
  global _hidden_verificationVariable=0
  set_safety_mode_transition_hardness(1)
  set_target_payload(0.100000, [0.000000, 0.000000, 0.000000], [0.000033, 0.000033, 0.000033, 0.000000, 0.000000, 0.000000])
  set_tool_communication(False, 115200, 0, 1, 1.5, 3.5)
  set_tool_output_mode(0)
  set_tool_digital_output_mode(0, 1)
  set_tool_digital_output_mode(1, 1)
  set_tool_voltage(0)
  set_tcp(p[0.0,0.0,0.0,0.0,0.0,0.0])
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  set_gravity([0.0, 0.0, 9.82])
  step_count_94d95d37_32c9_4a44_8f7a_5f3c93b11c22 = 0.0
  thread Step_Counter_Thread_f3d82cf0_06c4_418b_8375_6922fa06842b():
    while (True):
      step_count_94d95d37_32c9_4a44_8f7a_5f3c93b11c22 = step_count_94d95d37_32c9_4a44_8f7a_5f3c93b11c22 + 1.0
      sync()
    end
  end
  run Step_Counter_Thread_f3d82cf0_06c4_418b_8375_6922fa06842b()
  global Waypoint_1_p=p[-.130859406351, -.597683970173, .249999999563, -.035484193663, 3.116345277713, .039322536349]
  global Waypoint_1_q=[-1.5707963267368097, -1.9683433912165675, -1.7151232560025074, -1.0544401971959685, 1.5953027315870227, -0.023084677685064392]
  global Waypoint_2_p=p[-.130859406351, -.597683970284, .080000009262, -.035484193663, 3.116345277713, .039322536349]
  global Waypoint_2_q=[-1.5707963267948966, -2.242300182150233, -1.8239804304776976, -0.6716262317885358, 1.5953027315855195, -0.023084677743149484]
  global ViaPoint_1_p=p[.449151914155, -.130859406366, .249999998710, 2.246019332807, -2.195446675775, -.055561072449]
  global ViaPoint_1_q=[-3.3274680788508704E-9, -1.6582631794029323, -2.121975123812815, -0.9576685571771826, 1.5953027467959497, -0.023084684483553275]
  global EndPoint_1_p=p[.130859406386, .597683970166, .249999999563, 3.115919697866, .035479347718, -.038640756490]
  global EndPoint_1_q=[1.570796326794897, -1.9683433912165675, -1.7151232560025074, -1.0544401971959685, 1.5953027315870227, -0.023084677685064392]
  global Waypoint_3_p=p[.130859406386, .597683970166, .079999999887, 3.115919697866, .035479347718, -.038640756490]
  global Waypoint_3_q=[1.5707963267368064, -2.2423002001795362, -1.8239804319580841, -0.6716262122788619, 1.5953027315855406, -0.023084677743189452]
  while (True):
    $ 2 "Robot Program"
    $ 3 "MoveJ"
    $ 4 "Waypoint_1" "breakAfter"
    movej(get_inverse_kin(Waypoint_1_p, qnear=Waypoint_1_q), a=1.3962634015954636, v=1.0471975511965976)
    $ 5 "Loop"
    while (True):
      $ 6 "Wait: 0.5"
      sleep(0.5)
      $ 7 "MoveL"
      $ 8 "Waypoint_2" "breakAfter"
      movel(Waypoint_2_p, a=1.2, v=0.25)
      $ 9 "Wait: 1.0"
      sleep(1.0)
      $ 10 "Waypoint_1" "breakAfter"
      movel(Waypoint_1_p, a=1.2, v=0.25)
      $ 11 "Wait: 0.5"
      sleep(0.5)
      $ 12 "MoveP"
      $ 13 "CircleMove"
      $ 14 "ViaPoint_1" "noBreak"
      
      $ 15 "EndPoint_1" "breakAfter"
      movec(ViaPoint_1_p, EndPoint_1_p, a=1.2, v=0.25, r=0.025, mode=1)
      $ 16 "Wait: 0.5"
      sleep(0.5)
      $ 17 "MoveL"
      $ 18 "Waypoint_3" "breakAfter"
      movel(Waypoint_3_p, a=1.2, v=0.25)
      $ 19 "Wait: 1.0"
      sleep(1.0)
      $ 20 "EndPoint_1" "breakAfter"
      movel(EndPoint_1_p, a=1.2, v=0.25)
      $ 21 "Wait: 0.5"
      sleep(0.5)
      $ 22 "MoveP"
      $ 23 "CircleMove"
      $ 24 "ViaPoint_1" "noBreak"
      
      $ 25 "Waypoint_1" "breakAfter"
      movec(ViaPoint_1_p, Waypoint_1_p, a=1.2, v=0.25, r=0.0, mode=1)
    end
  end
end
